openapi: 3.0.0
servers:
  - url: 'http://192.168.21.99:38083/abyss/oapi'
  - url: 'http://192.168.21.139:38083/abyss/oapi'
  - url: 'http://192.168.10.46:38083/abyss/oapi'
  - url: '/abyss/oapi'
  - url: '/abyss/openapi'
info:
  description: Abyss platform APIs
  version: 1.0.0
  title: Abyss
  termsOfService: 'https://apiportal.com/terms/'
  contact:
    email: info@apiportal.com
    name: Abyss
    url: 'https://apiportal.com'
  license:
    name: Abyss 1.0
    url: 'https://apiportal.com/licenses/LICENSE-1.0.html'
tags:
  - name: TODO
    externalDocs:
      url: 'https://apiportal.com'
      description: Find out more
    description: Abyss ... [TODO]
paths:
  /apis:
    get:
      tags:
        - TODO
      summary: Get list of Apis
      description: 'Returns list of Apis'
      operationId: getApis
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search Subjects which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search Subjects which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - TODO
      summary: Add a bulk of Apis
      description: 'Provide a list of Api objects to be inserted'
      operationId: addApis
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - TODO
      summary: Update a bulk of Apis
      description: 'Provide a bulk list of  Api objects to be updated'
      operationId: updateApis
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - TODO
      summary: Delete all Apis
      description: 'Deletes all Apis'
      operationId: deleteApis
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/{uuid}:
    get:
      tags:
        - TODO
      summary: Get an existing Api by uuid
      description: 'Provide an uuid of Api to be get'
      operationId: getApi
      parameters:
        - name: uuid
          in: path
          description: uuid of Api that need to be get
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - TODO
      summary: Update an existing Api
      description: 'Provide an altered Api to be updated'
      operationId: updateApi
      parameters:
        - name: uuid
          in: path
          description: uuid of Api that need to be updated
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/Api'
    delete:
      tags:
        - TODO
      summary: Delete Api
      description: 'Provide an uuid parameter of Api to be updated'
      operationId: deleteApi
      parameters:
        - name: uuid
          in: path
          description: The uuid of Api that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/subject/{uuid}:
    get:
      tags:
        - TODO
      summary: Get APIs by Subject uuid
      description: 'Provide an uuid of Subject to get his APIs'
      operationId: getApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: uuid of Subject that need to get his APIs
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search APIs which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search APIs which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - TODO
      summary: Add a bulk of new APIs for a Subject
      description: 'Provide a list of Api objects to be inserted'
      operationId: addApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: uuid of Subject that need to add his APIs
          required: true
          schema:
            type: string
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - TODO
      summary: Update APIs of Subject
      description: 'Provide a list of Api objects to be updated'
      operationId: updateApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: uuid of Subject that need to update his APIs
          required: true
          schema:
            type: string
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - TODO
      summary: Delete all APIs of Subject
      description: 'Provide an uuid parameter of Api to be deleted'
      operationId: deleteApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: uuid of Subject that need to delete his APIs
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses:
    get:
      tags:
        - TODO
      summary: Get list of Business APIs
      description: 'Returns list of Business APIs'
      operationId: getBusinessApis
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search Business APIs which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search Business APIs which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - TODO
      summary: Add a bulk of Business APIs
      description: 'Provide a list of Business APIs objects to be inserted'
      operationId: addBusinessApis
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - TODO
      summary: Update a bulk of Business APIs
      description: 'Provide a bulk list of  Business APIs objects to be updated'
      operationId: updateBusinessApis
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - TODO
      summary: Delete all Business APIs
      description: 'Deletes all Business APIs'
      operationId: deleteBusinessApis
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/{uuid}:
    get:
      tags:
        - TODO
      summary: Get an existing Business API by uuid
      description: 'Provide an uuid of Api to be get'
      operationId: getBusinessApi
      parameters:
        - name: uuid
          in: path
          description: uuid of Business API that need to be get
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - TODO
      summary: Update an existing Business API
      description: 'Provide an altered Business API to be updated'
      operationId: updateBusinessApi
      parameters:
        - name: uuid
          in: path
          description: uuid of Business API that need to be updated
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/Api'
    delete:
      tags:
        - TODO
      summary: Delete Business API
      description: 'Provide an uuid parameter of Business API to be updated'
      operationId: deleteBusinessApi
      parameters:
        - name: uuid
          in: path
          description: The uuid of Business API that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies:
    get:
      tags:
        - TODO
      summary: Get list of API Proxies
      description: 'Returns list of API Proxies'
      operationId: getApiProxies
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search API Proxies which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search API Proxies which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - TODO
      summary: Add a bulk of API Proxies
      description: 'Provide a list of API Proxies objects to be inserted'
      operationId: addApiProxies
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - TODO
      summary: Update a bulk of API Proxies
      description: 'Provide a bulk list of  API Proxies objects to be updated'
      operationId: updateApiProxies
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - TODO
      summary: Delete all API Proxies
      description: 'Deletes all API Proxies'
      operationId: deleteApiProxies
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/{uuid}:
    get:
      tags:
        - TODO
      summary: Get an existing API Proxy by uuid
      description: 'Provide an uuid of API Proxy to be get'
      operationId: getApiProxy
      parameters:
        - name: uuid
          in: path
          description: uuid of API Proxy that need to be get
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - TODO
      summary: Update an existing API Proxy
      description: 'Provide an altered API Proxy to be updated'
      operationId: updateApiProxy
      parameters:
        - name: uuid
          in: path
          description: uuid of API Proxy that need to be updated
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/Api'
    delete:
      tags:
        - TODO
      summary: Delete API Proxy
      description: 'Provide an uuid parameter of API Proxy to be updated'
      operationId: deleteApiProxy
      parameters:
        - name: uuid
          in: path
          description: The uuid of API Proxy that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
externalDocs:
  description: See Abyss example
  url: 'https://apiportal.com/apidocs/index.html'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - usermessage
      properties:
        code:
          type: integer
          format: int32
        usermessage:
          type: string
        internalmessage:
          type: string
        details:
          type: string
        recommendation:
          type: string
        moreinfo:
          type: string
          format: uri
    MultiStatus:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          readOnly: true
        response:
          $ref: '#/components/schemas/Api'
        error:
          $ref: '#/components/schemas/Error'
    Api:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: Secondary primary key. Used in front end messages for security reasons.
        organizationid:
          type: string
          description: Id of Organization
        created:
          type: string
          readOnly: true
          description: Timestamp of creation #readOnly#
        updated:
          type: string
          readOnly: true
          description: Timestamp of update #readOnly#
        deleted:
          type: string
          readOnly: true
          description: Timestamp of deletion #readOnly#
        isdeleted:
          type: boolean
          readOnly: true
          description: Is record logically deleted #readOnly#
        crudsubjectid:
          type: string
          description: ID of Subject that reads, creates, updates or deletes
        subjectid:
          type: string
          description: FK ID of owner Subject
        isproxyapi:
          type: boolean
          description: Type of API. False - Business API, True - API Proxy
        apistateid:
          type: string
          description: FK ID of State of Business API
        apivisibilityid:
          type: string
          description: ID of Business API Visibility - Private, Closed Group, Public, ...
        languagename:
          type: string
          description: Formal API Description Language - Swagger, OpenAPI, RAML, WADL, WSDL, ...
        languageversion:
          type: string
          description: Version of Description Language
        dataformat:
          type: integer
          format: int32
          description: Data format type. 0 - JSON, 1 - YAML, 2 - XML
        originaldocument:
          type: string
          description: Original API DSL Document
        openapidocument:
          type: object
          description: Transformed API DSL document in Open API json format. Shareable. #jsonb#
        extendeddocument:
          type: object
          readOnly: true
          description: Extended OpenAPI document of Abyss Platform changed both for Business API registration and Proxy API creation. Private. #readOnly#  #jsonb#
        businessapiid:
          type: string
          description: FK ID of Business API for API Proxies
        image:
          type: string
          description: Image data of Business API
        color:
          type: string
          description: Color of Business API
        deployed:
          type: string
          description: Deployed Date Time of API
        changelog:
          type: string
          description: Release notes and change log of API
        apioriginuuid:
          type: string
          description: Origin ID of this API version
        version:
          type: string
          description: Version of API
        issandbox:
          type: boolean
          description: Is API Sandbox
        islive:
          type: boolean
          description: Is API Live
        isdefaultversion:
          type: boolean
          description: Is this API Version Default
        islatestversion:
          type: boolean
          description: Is this API Version Latest
  requestBodies:
    Api:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api'
      description: Api object that needs to be added or updated
      required: true
    ListOfApi:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Api'
      description: Api array that needs to be added
      required: true
    ListOfApiObject:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      description:  list of Api objects that needs to be updated, each additional property name should be the uuid of coresponding Api record
      required: true
  responses:
    '200':
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api'
    '200-ListOfApi':
      description: A Api array
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Api'
    '201':
      description: New Api resource has been created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api'
    '204':
      description: The Api resource was successfully deleted
    '207':
      description: Multi Status for bulk operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MultiStatus'
    '304':
      description: Not Modified – The client can use cached data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api'
    '400':
      description: Invalid UUID supplied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Authorization information is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden – The server understood the request, but is refusing it or the access is not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not found – There is no resource behind the URI
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      description: Unprocessable Entity – server cannot process the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '429':
      description: Too many request(rate limiting)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    default:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return
  securitySchemes:
    abyssCookieAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssCookieAuth'
    abyssHttpBasicAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssHttpBasicAuth'
    abyssApiKeyAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssApiKeyAuth'
    abyssJWTBearerAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssJWTBearerAuth'
  links: {}
  callbacks: {}
security:
  - abyssCookieAuth: []
  - abyssHttpBasicAuth: []
  - abyssApiKeyAuth: []
  - abyssJWTBearerAuth: []
