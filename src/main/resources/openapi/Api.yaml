openapi: 3.0.0
servers:
  - url: 'http://192.168.21.99:38083/abyss/oapi'
  - url: 'http://192.168.21.139:38083/abyss/oapi'
  - url: 'http://192.168.10.46:38083/abyss/oapi'
  - url: '/abyss/oapi'
info:
  description: 'Abyss platform APIs'
  version: '1.0.0'
  title: 'Abyss'
  termsOfService: 'https://apiportal.com/terms/'
  contact:
    email: 'info@apiportal.com'
    name: 'Abyss'
    url: 'https://apiportal.com'
  license:
    name: 'Abyss 1.0'
    url: 'https://apiportal.com/licenses/LICENSE-1.0.html'
tags:
  - name: Apis
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Apis crud operations'
  - name: Api
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Api crud operations'
  - name: Subject-APIs
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Subject APIs crud operations'
  - name: Business-APIs
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Business APIs crud operations'
  - name: Business-API
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Business API crud operations'
  - name: API-Proxies
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : API Proxies crud operations'
  - name: API-Proxy
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : API Proxy crud operations'
  - name: API-Proxies-Under-License
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : API Proxies Under License crud operations'
  - name: Subject-Business-APIs
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Subjects'' Business APIs crud operations'
  - name: Subject-API-Proxies
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Subject''s API Proxies crud operations'
  - name: Subject-Business API-Tags
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Subject''s Business API tags'
  - name: Subject Business APIs By Tag-Category-Group
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Subject''s Business APIs by tag'
  - name: Subject API Proxies By Tag-Category-Group
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Subject''s API Proxies by tag'
  - name: Shared APIs
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Shared APIs listing operations'
paths:
  /apis:
    get:
      tags:
        - Apis
      summary: 'Get list of Apis'
      description: 'Returns list of Apis'
      operationId: getApis
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search Apis which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search Apis which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - Apis
      summary: 'Add a bulk of Apis'
      description: 'Provide a list of Apis to be inserted'
      operationId: addApis
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - Apis
      summary: 'Update a bulk of Apis'
      description: 'Provide a bulk list of  Apis to be updated'
      operationId: updateApis
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - Apis
      summary: 'Delete all Apis'
      description: 'Deletes all Apis'
      operationId: deleteApis
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/{uuid}:
    get:
      tags:
        - Api
      summary: 'Get an existing Api by uuid'
      description: 'Provide an uuid of Api to be get'
      operationId: getApi
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Api that need to be get'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - Api
      summary: 'Update an existing Api'
      description: 'Provide an altered Api to be updated'
      operationId: updateApi
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Api that need to be updated'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/Api'
    delete:
      tags:
        - Api
      summary: 'Delete Api'
      description: 'Provide an uuid parameter of Api to be updated'
      operationId: deleteApi
      parameters:
        - name: uuid
          in: path
          description: 'The uuid of Api that needs to be deleted'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/image/{uuid}:
    get:
      tags:
        - Api
      summary: 'Get image of an existing Api by uuid'
      description: 'Provide an uuid of Api to be get'
      operationId: getApiImage
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Api that need to be get'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200-ApiImage'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/policy/{uuid}:
    get:
      tags:
        - Api
      summary: 'Get an Api list of policy'
      description: 'Returns Api list of policy'
      operationId: getApisByPolicy
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Policy'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/subject/{uuid}:
    get:
      tags:
        - Subject-APIs
      summary: 'Get APIs by Subject uuid'
      description: 'Provide an uuid of Subject to get his APIs'
      operationId: getApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to get his APIs'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search APIs which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search APIs which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - Subject-APIs
      summary: 'Add a bulk of new APIs for a Subject'
      description: 'Provide a list of Api objects to be inserted'
      operationId: addApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to add his APIs'
          required: true
          schema:
            type: string
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - Subject-APIs
      summary: 'Update APIs of Subject'
      description: 'Provide a list of Api objects to be updated'
      operationId: updateApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to update his APIs'
          required: true
          schema:
            type: string
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - Subject-APIs
      summary: 'Delete all APIs of Subject'
      description: 'Provide an uuid parameter of Api to be deleted'
      operationId: deleteApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to delete his APIs'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/:
    get:
      tags:
        - Business-APIs
      summary: 'Get list of Business APIs'
      description: 'Returns list of Business APIs'
      operationId: getBusinessApis
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search Business APIs which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search Business APIs which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfBusinessApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - Business-APIs
      summary: 'Add a bulk of Business APIs'
      description: 'Provide a list of Business APIs objects to be inserted'
      operationId: addBusinessApis
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - Business-APIs
      summary: 'Update a bulk of Business APIs'
      description: 'Provide a bulk list of  Business APIs objects to be updated'
      operationId: updateBusinessApis
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - Business-APIs
      summary: 'Delete all Business APIs'
      description: 'Deletes all Business APIs'
      operationId: deleteBusinessApis
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/{uuid}:
    get:
      tags:
        - Business-API
      summary: 'Get an existing Business API by uuid'
      description: 'Provide an uuid of Api to be get'
      operationId: getBusinessApi
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Business API that need to be get'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200-BusinessApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - Business-API
      summary: 'Update an existing Business API'
      description: 'Provide an altered Business API to be updated'
      operationId: updateBusinessApi
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Business API that need to be updated'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200-BusinessApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/BusinessApi'
    delete:
      tags:
        - Business-API
      summary: 'Delete Business API'
      description: 'Provide an uuid parameter of Business API to be updated'
      operationId: deleteBusinessApi
      parameters:
        - name: uuid
          in: path
          description: 'The uuid of Business API that needs to be deleted'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/:
    get:
      tags:
        - API-Proxies
      summary: 'Get list of API Proxies'
      description: 'Returns list of API Proxies'
      operationId: getApiProxies
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search API Proxies which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search API Proxies which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - API-Proxies
      summary: 'Add a bulk of API Proxies'
      description: 'Provide a list of API Proxies objects to be inserted'
      operationId: addApiProxies
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - API-Proxies
      summary: 'Update a bulk of API Proxies'
      description: 'Provide a bulk list of  API Proxies objects to be updated'
      operationId: updateApiProxies
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - API-Proxies
      summary: 'Delete all API Proxies'
      description: 'Deletes all API Proxies'
      operationId: deleteApiProxies
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/explore:
    get:
      tags:
        - API-Proxies
      summary: 'Get list of API Proxies with Resources'
      description: 'Returns list of API Proxies with Resources'
      operationId: getApiProxiesExplore
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search API Proxies which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search API Proxies which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApiProxyWithResources'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/{uuid}:
    get:
      tags:
        - API-Proxy
      summary: 'Get an existing API Proxy by uuid'
      description: 'Provide an uuid of API Proxy to be get'
      operationId: getApiProxy
      parameters:
        - name: uuid
          in: path
          description: 'uuid of API Proxy that need to be get'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - API-Proxy
      summary: 'Update an existing API Proxy'
      description: 'Provide an altered API Proxy to be updated'
      operationId: updateApiProxy
      parameters:
        - name: uuid
          in: path
          description: 'uuid of API Proxy that need to be updated'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/Api'
    delete:
      tags:
        - API-Proxy
      summary: 'Delete API Proxy'
      description: 'Provide an uuid parameter of API Proxy to be deleted'
      operationId: deleteApiProxy
      parameters:
        - name: uuid
          in: path
          description: 'The uuid of API Proxy that needs to be deleted'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/subject/{uuid}:
    get:
      tags:
        - Subject-Business-APIs
      summary: 'Get Business APIs by Subject uuid'
      description: 'Provide an uuid of Subject to get his Business APIs'
      operationId: getBusinessApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to get his Business APIs'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business APIs which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business APIs which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfBusinessApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - Subject-Business-APIs
      summary: 'Add a bulk of Business APIs for Subject'
      description: 'Provide a list of his Business APIs objects to be inserted'
      operationId: addBusinessApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to add his Business APIs'
          required: true
          schema:
            type: string
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfBusinessApi'
    put:
      tags:
        - Subject-Business-APIs
      summary: 'Update a bulk of Business APIs for Subject'
      description: 'Provide a bulk list of  his Business APIs objects to be updated'
      operationId: updateBusinessApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to update his Business APIs'
          required: true
          schema:
            type: string
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - Subject-Business-APIs
      summary: Delete all Business APIs for Subject
      description: 'Deletes his all Business APIs'
      operationId: deleteBusinessApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to delete his Business APIs'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/subject/{uuid}:
    get:
      tags:
        - Subject-API-Proxies
      summary: 'Get API Proxies by Subject uuid'
      description: 'Provide an uuid of Subject to get his API Proxies'
      operationId: getApiProxiesOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to get his API Proxies'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his API Proxies which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his API Proxies which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - Subject-API-Proxies
      summary: 'Add a bulk of API Proxies for Subject'
      description: 'Provide a list of his API Proxies objects to be inserted'
      operationId: addApiProxiesOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to add his API Proxies'
          required: true
          schema:
            type: string
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApi'
    put:
      tags:
        - Subject-API-Proxies
      summary: 'Update a bulk of API Proxies for Subject'
      description: 'Provide a bulk list of  his API Proxies objects to be updated'
      operationId: updateApiProxiesOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to update his API Proxies'
          required: true
          schema:
            type: string
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfApiObject'
    delete:
      tags:
        - Subject-API-Proxies
      summary: 'Delete all API Proxies for Subject'
      description: 'Deletes his all API Proxies'
      operationId: deleteApiProxiesOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to delete his API Proxies'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/license/{uuid}:
    get:
      tags:
        - API-Proxies-Under-License
      summary: 'Get API Proxies by License uuid'
      description: 'Provide an uuid of License to get API Proxies using it'
      operationId: getApiProxiesUnderLicense
      parameters:
        - name: uuid
          in: path
          description: 'uuid of License that is going to be used to filter API Proxies'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/subject/{uuid}/tags:
    get:
      tags:
        - Subject-Business API-Tags
      summary: Get Tags of Business APIs by Subject uuid
      description: 'Provide an uuid of Subject to get his Business APIs tags'
      operationId: getTagsOfBusinessApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to get his Business APIs tags'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business API tags which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business API tag which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApiTags'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/subject/{uuid}/tags/aggregate/{aggregation}:
    get:
      tags:
        - Subject-Business API-Tags
      summary: 'Get Aggregation of Tags of Business APIs by Subject uuid'
      description: 'Provide an uuid of Subject to get his Business APIs tags'
      operationId: getAggregatedTagsOfBusinessApisOfSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject that need to get his Business API tags'
          required: true
          schema:
            type: string
        - name: aggregation
          in: path
          required: true
          schema:
            type: string
            enum:
              - count
              - sum
              - avg
            default: count
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business API tags which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business API tags which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApiTagSummary'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/tag/{tag}/subject/{uuid}:
    get:
      tags:
        - Subject Business APIs By Tag-Category-Group
      summary: Get Business APIs by both Subject and Tag
      description: 'Provide an uuid of Subject and uuid of Tag to get his Business APIs'
      operationId: getBusinessApisOfSubjectByTag
      parameters:
        - name: tag
          in: path
          description: 'uuid of Tag'
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          description: 'uuid of Subject'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business APIs which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business APIs which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfBusinessApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/category/{category}/subject/{uuid}:
    get:
      tags:
        - Subject Business APIs By Tag-Category-Group
      summary: Get Business APIs by both Subject and Category
      description: 'Provide an uuid of Subject and uuid of Category to get his Business APIs'
      operationId: getBusinessApisOfSubjectByCategory
      parameters:
        - name: category
          in: path
          description: 'uuid of Category'
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          description: 'uuid of Subject'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business APIs which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business APIs which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfBusinessApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/businesses/group/{group}/subject/{uuid}:
    get:
      tags:
        - Subject Business APIs By Tag-Category-Group
      summary: Get Business APIs by both Subject and API Group
      description: 'Provide an uuid of Subject and uuid of API Group to get his Business APIs'
      operationId: getBusinessApisOfSubjectByGroup
      parameters:
        - name: group
          in: path
          description: 'uuid of API Group'
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          description: 'uuid of Subject'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business APIs which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his Business APIs which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfBusinessApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/tag/{tag}/subject/{uuid}:
    get:
      tags:
        - Subject API Proxies By Tag-Category-Group
      summary: Get API Proxies by both Subject and Tag
      description: 'Provide an uuid of Subject and uuid of Tag to get his API Proxies'
      operationId: getApiProxiesOfSubjectByTag
      parameters:
        - name: tag
          in: path
          description: 'uuid of Tag'
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          description: 'uuid of Subject'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his API Proxies which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his API Proxies which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/category/{category}/subject/{uuid}:
    get:
      tags:
        - Subject API Proxies By Tag-Category-Group
      summary: Get API Proxies by both Subject and Category
      description: 'Provide an uuid of Subject and uuid of Category to get his API Proxies'
      operationId: getApiProxiesOfSubjectByCategory
      parameters:
        - name: category
          in: path
          description: 'uuid of Category'
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          description: 'uuid of Subject'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his API Proxies which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his API Proxies which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/proxies/group/{group}/subject/{uuid}:
    get:
      tags:
        - Subject API Proxies By Tag-Category-Group
      summary: Get API Proxies by both Subject and API Group
      description: 'Provide an uuid of Subject and uuid of API Group to get his API Proxies'
      operationId: getApiProxiesOfSubjectByGroup
      parameters:
        - name: group
          in: path
          description: 'uuid of API Group'
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          description: 'uuid of Subject'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his API Proxies which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his API Proxies which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/sharedwith/subject/{uuid}:
    get:
      tags:
        - Shared APIs
      summary: Get APIs shared with subject
      description: 'Provide an uuid of Subject to get APIs shared with him'
      operationId: getApisSharedWithSubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his APIs which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his APIs which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /apis/sharedby/subject/{uuid}:
    get:
      tags:
        - Shared APIs
      summary: Get APIs shared by subject
      description: 'Provide an uuid of Subject to get APIs shared by him'
      operationId: getApisSharedBySubject
      parameters:
        - name: uuid
          in: path
          description: 'uuid of Subject'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search his APIs which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search his APIs which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfApi'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
externalDocs:
  description: 'See Abyss example'
  url: 'https://apiportal.com/apidocs/index.html'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - usermessage
      properties:
        code:
          type: integer
          format: int32
        usermessage:
          type: string
        internalmessage:
          type: string
        details:
          type: string
        recommendation:
          type: string
        moreinfo:
          type: string
          format: uri
    MultiStatus:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'uuid of the record'
        status:
          type: integer
          readOnly: true
          description: 'status -Http response code status (2XX, 3XX, 4XX, 5XX)'
        response:
          $ref: '#/components/schemas/Api'
        error:
          $ref: '#/components/schemas/Error'
    Api:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'Secondary primary key. Used in front end messages for security reasons.'
        organizationid:
          type: string
          description: 'Id of Organization'
        created:
          type: string
          readOnly: true
          description: 'Timestamp of creation #readOnly#'
        updated:
          type: string
          readOnly: true
          description: 'Timestamp of update #readOnly#'
        deleted:
          type: string
          readOnly: true
          description: 'Timestamp of deletion #readOnly#'
        isdeleted:
          type: boolean
          readOnly: true
          description: 'Is record logically deleted #readOnly#'
        crudsubjectid:
          type: string
          description: 'ID of Subject that reads, creates, updates or deletes'
        subjectid:
          type: string
          description: 'FK ID of owner Subject'
        isproxyapi:
          type: boolean
          description: 'Type of API. False - Business API, True - API Proxy'
        apistateid:
          type: string
          description: 'FK ID of State of Business API'
        apivisibilityid:
          type: string
          description: 'ID of Business API Visibility - Private, Closed Group, Public, ...'
        languagename:
          type: string
          description: 'Formal API Description Language - Swagger, OpenAPI, RAML, WADL, WSDL, ...'
        languageversion:
          type: string
          description: 'Version of Description Language'
        languageformat:
          type: integer
          format: int32
          description: 'Data format type. 0 - JSON, 1 - YAML, 2 - XML'
        originaldocument:
          type: string
          description: 'Original API DSL Document'
        openapidocument:
          type: object
          description: 'Transformed API DSL document in Open API json format. Shareable. #jsonb#'
        extendeddocument:
          type: object
          description: 'Extended OpenAPI document of Abyss Platform changed both for Business API registration and Proxy API creation. Private. #jsonb#'
        businessapiid:
          type: string
          description: 'FK ID of Business API for API Proxies'
        image:
          type: string
          format: byte
          writeOnly: true
          description: 'Image data of Business API'
        color:
          type: string
          description: 'Color of Business API'
        deployed:
          type: string
          description: 'Deployed Date Time of API'
        changelog:
          type: string
          description: 'Release notes and change log of API'
        version:
          type: string
          description: 'Version of API'
        issandbox:
          type: boolean
          description: 'Is API Sandbox'
        islive:
          type: boolean
          description: 'Is API Live'
        isdefaultversion:
          type: boolean
          description: 'Is this API Version Default'
        islatestversion:
          type: boolean
          description: 'Is this API Version Latest'
        apioriginid:
          type: string
          description: 'Origin ID of this API Version'
        apiparentid:
          type: string
          description: 'Parent ID of this API Version'
    BusinessApi:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'Secondary primary key. Used in front end messages for security reasons.'
        organizationid:
          type: string
          description: 'Id of Organization'
        created:
          type: string
          readOnly: true
          description: 'Timestamp of creation #readOnly#'
        updated:
          type: string
          readOnly: true
          description: 'Timestamp of update #readOnly#'
        deleted:
          type: string
          readOnly: true
          description: 'Timestamp of deletion #readOnly#'
        isdeleted:
          type: boolean
          readOnly: true
          description: 'Is record logically deleted #readOnly#'
        crudsubjectid:
          type: string
          description: 'ID of Subject that reads, creates, updates or deletes'
        subjectid:
          type: string
          description: 'FK ID of owner Subject'
        isproxyapi:
          type: boolean
          description: 'Type of API. False - Business API, True - API Proxy'
        apistateid:
          type: string
          description: 'FK ID of State of Business API'
        apivisibilityid:
          type: string
          description: 'ID of Business API Visibility - Private, Closed Group, Public, ...'
        languagename:
          type: string
          description: 'Formal API Description Language - Swagger, OpenAPI, RAML, WADL, WSDL, ...'
        languageversion:
          type: string
          description: 'Version of Description Language'
        languageformat:
          type: integer
          format: int32
          description: 'Data format type. 0 - JSON, 1 - YAML, 2 - XML'
        originaldocument:
          type: string
          description: 'Original API DSL Document'
        openapidocument:
          type: object
          description: 'Transformed API DSL document in Open API json format. Shareable. #jsonb#'
        extendeddocument:
          type: object
          description: 'Extended OpenAPI document of Abyss Platform changed both for Business API registration and Proxy API creation. Private. #jsonb#'
        # businessapiid:
        #   type: string
        #   description: 'FK ID of Business API for API Proxies'
        image:
          type: string
          format: byte
          writeOnly: true
          description: 'Image data of Business API'
        color:
          type: string
          description: 'Color of Business API'
        deployed:
          type: string
          description: 'Deployed Date Time of API'
        changelog:
          type: string
          description: 'Release notes and change log of API'
        version:
          type: string
          description: 'Version of API'
        issandbox:
          type: boolean
          description: 'Is API Sandbox'
        islive:
          type: boolean
          description: 'Is API Live'
        isdefaultversion:
          type: boolean
          description: 'Is this API Version Default'
        islatestversion:
          type: boolean
          description: 'Is this API Version Latest'
        apioriginid:
          type: string
          description: 'Origin ID of this API Version'
        apiparentid:
          type: string
          description: 'Parent ID of this API Version'
    ApiTagSummary:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: Secondary primary key. Used in front end messages for security reasons.
        name:
          type: string
          description: Name of tag
        description:
          type: string
          description: Description of tag
        externaldescription:
          type: string
          description: Description of External Documentation
        externalurl:
          type: string
          description: URL of External Documentation
        aggregation:
          type: number
          description: Number of APIs having this tag
    ApiCategorySummary:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: Secondary primary key. Used in front end messages for security reasons.
        name:
          type: string
          description: Name of category
        description:
          type: string
          description: Description of category
        aggregation:
          type: number
          description: Number of APIs having this category
    ApiGroupSummary:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: Secondary primary key. Used in front end messages for security reasons.
        name:
          type: string
          description: Name of group
        description:
          type: string
          description: Description of group
        aggregation:
          type: number
          description: Number of APIs having this group
    ApiStateSummary:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: Secondary primary key. Used in front end messages for security reasons.
        name:
          type: string
          description: Name of state
        description:
          type: string
          description: Description of state
        aggregation:
          type: number
          description: Number of APIs having this state
    ApiVisibilityTypeSummary:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: Secondary primary key. Used in front end messages for security reasons.
        name:
          type: string
          description: Name of visibility type
        description:
          type: string
          description: Description of visibility type
        aggregation:
          type: number
          description: Number of APIs having this visibility type
    ApiImage:
      type: string
      format: binary
      description: Api Image
    ApiProxyWithResources:
      allOf:
        - type: object
          properties:
            uuid:
              type: string
              readOnly: true
              description: 'Secondary primary key. Used in front end messages for security reasons.'
            organizationid:
              type: string
              description: 'Id of Organization'
            created:
              type: string
              readOnly: true
              description: 'Timestamp of creation #readOnly#'
            updated:
              type: string
              readOnly: true
              description: 'Timestamp of update #readOnly#'
            deleted:
              type: string
              readOnly: true
              description: 'Timestamp of deletion #readOnly#'
            isdeleted:
              type: boolean
              readOnly: true
              description: 'Is record logically deleted #readOnly#'
            crudsubjectid:
              type: string
              description: 'ID of Subject that reads, creates, updates or deletes'
            subjectid:
              type: string
              description: 'FK ID of owner Subject'
            apistateid:
              type: string
              description: 'FK ID of State of Business API'
            apivisibilityid:
              type: string
              description: 'ID of Business API Visibility - Private, Closed Group, Public, ...'
            languagename:
              type: string
              description: 'Formal API Description Language - Swagger, OpenAPI, RAML, WADL, WSDL, ...'
            languageversion:
              type: string
              description: 'Version of Description Language'
            languageformat:
              type: integer
              format: int32
              description: 'Data format type. 0 - JSON, 1 - YAML, 2 - XML'
            color:
              type: string
              description: 'Color of Business API'
            deployed:
              type: string
              description: 'Deployed Date Time of API'
            changelog:
              type: string
              description: 'Release notes and change log of API'
            version:
              type: string
              description: 'Version of API'
            issandbox:
              type: boolean
              description: 'Is API Sandbox'
            islive:
              type: boolean
              description: 'Is API Live'
            isdefaultversion:
              type: boolean
              description: 'Is this API Version Default'
            islatestversion:
              type: boolean
              description: 'Is this API Version Latest'
            apioriginid:
              type: string
              description: 'Origin ID of this API Version'
            apiparentid:
              type: string
              description: 'Parent ID of this API Version'
            apititle:
              type: string
              description: 'Title of API inside OAS doc'
            apidescription:
              type: string
              description: 'Description of API inside OAS doc'
            apiversion:
              type: string
              description: 'Version of API inside OAS doc'
            apilicense:
              type: string
              description: 'License of API inside OAS doc'
            apiservers:
              type: array
              description: 'Servers of API inside OAS doc'
              items:
                type: object
                properties:
                  url:
                    type: string
                    description: 'Server urls of API inside OAS doc'
            apiowner:
              type: string
              description: 'Owner display name of API'
        - type: object
          properties:
            resources:
              allOf:
                - $ref: './Resource.yaml#/components/schemas/Resource'
                - type: object
                  properties:
                    permissions:
                      $ref: './SubjectPermission.yaml#/components/schemas/SubjectPermission'
                - type: object
                  properties:
                    availablelicenses:
                      $ref: './License.yaml#/components/schemas/License'
  requestBodies:
    Api:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api'
      description: 'Api object that needs to be added or updated'
      required: true
    BusinessApi:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessApi'
      description: 'Api object that needs to be added or updated'
      required: true
    ListOfApi:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Api'
      description: 'Api array that needs to be added'
      required: true
    ListOfBusinessApi:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BusinessApi'
      description: 'Api array that needs to be added'
      required: true
    ListOfApiObject:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      description:  'list of Api objects that needs to be updated, each additional property name should be the uuid of coresponding Api record'
      required: true
  responses:
    '200':
      description: 'Successful operation'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api'
    '200-BusinessApi':
      description: 'Successful operation'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessApi'
    '200-ListOfApi':
      description: 'An Api array'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Api'
    '200-ListOfBusinessApi':
      description: 'An Api array'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BusinessApi'
    '200-ApiImage':
      description: 'Successful operation'
      content:
        image/jpeg:
          schema:
            $ref: '#/components/schemas/ApiImage'
        image/png:
          schema:
            $ref: '#/components/schemas/ApiImage'
    '200-ListOfApiProxyWithResources':
      description: 'An Api Proxy with Resources array'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApiProxyWithResources'
    '201':
      description: 'New Api resource has been created'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api'
    '204':
      description: 'The Api resource was successfully deleted'
    '207':
      description: 'Multi Status for bulk operation'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MultiStatus'
    '304':
      description: 'Not Modified – The client can use cached data'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api'
    '400':
      description: 'Invalid UUID supplied'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: 'Authorization information is missing or invalid'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: 'Not found – There is no resource behind the URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: 'Method not allowed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      description: 'Unprocessable Entity – server cannot process the request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '429':
      description: 'Too many request(rate limiting)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: 'Internal server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '200-ListOfApiTags':
      description: 'List of ApiTags'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '/openapi/ApiTag.yaml#/components/schemas/ApiTag'
    '200-ListOfApiTagSummary':
      description: 'List of ApiTagSummary'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApiTagSummary'
    '200-ListOfApiCategories':
      description: 'List of ApiCategories'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '/openapi/ApiCategory.yaml#/components/schemas/ApiCategory'
    '200-ListOfApiCategorySummary':
      description: 'List of ApiCategorySummary'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApiCategorySummary'
    '200-ListOfApiGroups':
      description: 'List of ApiGroups'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '/openapi/ApiGroup.yaml#/components/schemas/ApiGroup'
    '200-ListOfApiGroupSummary':
      description: 'List of ApiGroupSummary'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApiGroupSummary'
    '200-ListOfApiStates':
      description: 'List of ApiStates'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '/openapi/ApiState.yaml#/components/schemas/ApiState'
    '200-ListOfApiStateSummary':
      description: 'List of ApiStateSummary'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApiStateSummary'
    '200-ListOfApiVisibilityTypes':
      description: 'List of ApiVisibilityTypes'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '/openapi/ApiVisibilityType.yaml#/components/schemas/ApiVisibilityType'
    '200-ListOfApiVisibilityTypeSummary':
      description: 'List of ApiVisibilityTypeSummary'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApiVisibilityTypeSummary'
    default:
      description: 'error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: 'The number of items to skip before starting to collect the result set'
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: 'The numbers of items to return'
  securitySchemes:
    abyssCookieAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssCookieAuth'
    abyssHttpBasicAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssHttpBasicAuth'
    abyssApiKeyAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssApiKeyAuth'
    abyssJWTBearerAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssJWTBearerAuth'
    abyssAppAccessTokenAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssAppKeyAuth'
    abyssAppAccessTokenCookieAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssAppKeyCookieAuth'
  links: {}
  callbacks: {}
security:
  - abyssCookieAuth: []
  - abyssHttpBasicAuth: []
  - abyssApiKeyAuth: []
  - abyssJWTBearerAuth: []
  - abyssAppAccessTokenAuth: []
  - abyssAppAccessTokenCookieAuth: []