openapi: 3.0.0
servers:
  - url: 'http://192.168.21.99:38083/abyss/oapi'
  - url: 'http://192.168.21.139:38083/abyss/oapi'
  - url: 'http://192.168.10.46:38083/abyss/oapi'
  - url: '/abyss/oapi'
info:
  description: 'Abyss platform APIs'
  version: '1.0.0'
  title: 'Abyss'
  termsOfService: 'https://apiportal.com/terms/'
  contact:
    email: 'info@apiportal.com'
    name: 'Abyss'
    url: 'https://apiportal.com'
  license:
    name: 'Abyss 1.0'
    url: 'https://apiportal.com/licenses/LICENSE-1.0.html'
tags:
  - name: SubjectMemberships
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : SubjectMemberships crud operations'
  - name: SubjectMembership
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : SubjectMembership crud operations'
  - name: Subject-Memberships
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Subject''s Memberships crud operations'
  - name: Group-Memberships
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Group''s Memberships crud operations'
  - name: DIRECTORY FILTERED
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Directory Filtered Memberships crud operations'
  - name: UserGroupMemberships
    externalDocs:
      url: 'https://apiportal.com'
      description: Find out more
    description: 'Abyss plaftorm APIs : User Group Memberships crud operations'
  - name: UserRoleMemberships
    externalDocs:
      url: 'https://apiportal.com'
      description: Find out more
    description: 'Abyss plaftorm APIs : User Role Memberships crud operations'
  - name: GroupRoleMemberships
    externalDocs:
      url: 'https://apiportal.com'
      description: Find out more
    description: 'Abyss plaftorm APIs : Group Role Memberships crud operations'
  - name: UserAppMemberships
    externalDocs:
      url: 'https://apiportal.com'
      description: Find out more
    description: 'Abyss plaftorm APIs : User App Memberships crud operations'
paths:
  /subject-memberships:
    get:
      tags:
        - SubjectMemberships
      summary: 'Get list of SubjectMemberships'
      description: 'Returns list of SubjectMemberships'
      operationId: getSubjectMemberships
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectMemberships which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectMemberships which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectMembership'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - SubjectMemberships
      summary: 'Add a bulk of SubjectMemberships'
      description: 'Provide a list of SubjectMemberships to be inserted'
      operationId: addSubjectMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembership'
    put:
      tags:
        - SubjectMemberships
      summary: 'Update a bulk of SubjectMemberships'
      description: 'Provide a bulk list of  SubjectMemberships to be updated'
      operationId: updateSubjectMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembershipObject'
    delete:
      tags:
        - SubjectMemberships
      summary: 'Delete all SubjectMemberships'
      description: 'Deletes all SubjectMemberships'
      operationId: deleteSubjectMemberships
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-memberships/{uuid}:
    get:
      tags:
        - SubjectMembership
      summary: 'Get an existing SubjectMembership by uuid'
      description: 'Provide an uuid of SubjectMembership to be get'
      operationId: getSubjectMembership
      parameters:
        - name: uuid
          in: path
          description: 'uuid of SubjectMembership that need to be get'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - SubjectMembership
      summary: 'Update an existing SubjectMembership'
      description: 'Provide an altered SubjectMembership to be updated'
      operationId: updateSubjectMembership
      parameters:
        - name: uuid
          in: path
          description: 'uuid of SubjectMembership that need to be updated'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/SubjectMembership'
    delete:
      tags:
        - SubjectMembership
      summary: 'Delete SubjectMembership'
      description: 'Provide an uuid parameter of SubjectMembership to be updated'
      operationId: deleteSubjectMembership
      parameters:
        - name: uuid
          in: path
          description: 'The uuid of SubjectMembership that needs to be deleted'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-memberships/subject/{uuid}:
    parameters:
      - name: uuid
        in: path
        description: 'uuid of Subject'
        required: true
        schema:
          type: string
    get:
      tags:
        - Subject-Memberships
      summary: 'Get list of SubjectMemberships'
      description: 'Returns list of SubjectMemberships'
      operationId: getMembershipsOfSubject
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectMemberships which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectMemberships which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectMembership'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - Subject-Memberships
      summary: 'Add a bulk of SubjectMemberships'
      description: 'Provide a list of SubjectMemberships to be inserted'
      operationId: addMembershipsOfSubject
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembership'
    put:
      tags:
        - Subject-Memberships
      summary: 'Update a bulk of SubjectMemberships'
      description: 'Provide a bulk list of  SubjectMemberships to be updated'
      operationId: updateMembershipsOfSubject
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembershipObject'
    delete:
      tags:
        - Subject-Memberships
      summary: 'Delete all SubjectMemberships'
      description: 'Deletes all SubjectMemberships'
      operationId: deleteMembershipsOfSubject
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-memberships/group/{uuid}:
    parameters:
      - name: uuid
        in: path
        description: 'uuid of Group'
        required: true
        schema:
          type: string
    get:
      tags:
        - Group-Memberships
      summary: 'Get list of GroupMemberships'
      description: 'Returns list of GroupMemberships'
      operationId: getMembershipsOfGroup
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectMemberships which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectMemberships which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectMembership'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    delete:
      tags:
        - Group-Memberships
      summary: 'Delete all GroupMemberships'
      description: 'Deletes all GroupMemberships'
      operationId: deleteMembershipsOfGroup
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-memberships/subject-directory/{uuid}:
    parameters:
      - name: uuid
        in: path
        description: 'uuid of Subject Directory'
        required: true
        schema:
          type: string
    get:
      tags:
        - DIRECTORY FILTERED
      summary: 'Get list of SubjectMemberships under given Subject Directory'
      description: 'Returns list of SubjectMemberships under given Subject Directory'
      operationId: getMembershipsUnderDirectory
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectMemberships which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectMemberships which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectMembership'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-memberships/user-group/:
    get:
      tags:
        - UserGroupMemberships
      summary: Get list of UserGroupMemberships
      description: Returns list of UserGroupMemberships
      operationId: getUserGroupMemberships
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search UserGroupMemberships which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search UserGroupMemberships which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectMembership'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - UserGroupMemberships
      summary: Add a bulk of UserGroupMemberships
      description: Provide a list of UserGroupMemberships to be inserted
      operationId: addUserGroupMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembership'
      parameters: []
    put:
      tags:
        - UserGroupMemberships
      summary: Update a bulk of UserGroupMemberships
      description: Provide a bulk list of  UserGroupMemberships to be updated
      operationId: updateUserGroupMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembershipObject'
      parameters: []
    delete:
      tags:
        - UserGroupMemberships
      summary: Delete all UserGroupMemberships
      description: Deletes all UserGroupMemberships
      operationId: deleteUserGroupMemberships
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      parameters: []
  /subject-memberships/user-role/:
    get:
      tags:
        - UserRoleMemberships
      summary: Get list of UserRoleMemberships
      description: Returns list of UserRoleMemberships
      operationId: getUserRoleMemberships
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search UserRoleMemberships which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search UserRoleMemberships which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectMembership'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - UserRoleMemberships
      summary: Add a bulk of UserRoleMemberships
      description: Provide a list of UserRoleMemberships to be inserted
      operationId: addUserRoleMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembership'
      parameters: []
    put:
      tags:
        - UserRoleMemberships
      summary: Update a bulk of UserRoleMemberships
      description: Provide a bulk list of  UserRoleMemberships to be updated
      operationId: updateUserRoleMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembershipObject'
      parameters: []
    delete:
      tags:
        - UserRoleMemberships
      summary: Delete all UserRoleMemberships
      description: Deletes all UserRoleMemberships
      operationId: deleteUserRoleMemberships
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      parameters: []
  /subject-memberships/group-role/:
    get:
      tags:
        - GroupRoleMemberships
      summary: Get list of GroupRoleMemberships
      description: Returns list of GroupRoleMemberships
      operationId: getGroupRoleMemberships
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search GroupRoleMemberships which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search GroupRoleMemberships which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectMembership'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - GroupRoleMemberships
      summary: Add a bulk of GroupRoleMemberships
      description: Provide a list of UserRoleMemberships to be inserted
      operationId: addGroupRoleMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembership'
      parameters: []
    put:
      tags:
        - GroupRoleMemberships
      summary: Update a bulk of GroupRoleMemberships
      description: Provide a bulk list of  GroupRoleMemberships to be updated
      operationId: updateGroupRoleMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembershipObject'
      parameters: []
    delete:
      tags:
        - GroupRoleMemberships
      summary: Delete all GroupRoleMemberships
      description: Deletes all GroupRoleMemberships
      operationId: deleteGroupRoleMemberships
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      parameters: []
  /subject-memberships/user-app/:
    get:
      tags:
        - UserAppMemberships
      summary: Get list of UserAppMemberships
      description: Returns list of UserAppMemberships
      operationId: getUserAppMemberships
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search UserAppMemberships which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search UserAppMemberships which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectMembership'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - UserAppMemberships
      summary: Add a bulk of UserAppMemberships
      description: Provide a list of UserAppMemberships to be inserted
      operationId: addUserAppMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembership'
      parameters: []
    put:
      tags:
        - UserAppMemberships
      summary: Update a bulk of UserAppMemberships
      description: Provide a bulk list of  UserAppMemberships to be updated
      operationId: updateUserAppMemberships
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectMembershipObject'
      parameters: []
    delete:
      tags:
        - UserAppMemberships
      summary: Delete all UserAppMemberships
      description: Deletes all UserAppMemberships
      operationId: deleteUserAppMemberships
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      parameters: []
externalDocs:
  description: 'See Abyss example'
  url: 'https://apiportal.com/apidocs/index.html'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - usermessage
      properties:
        code:
          type: integer
          format: int32
        usermessage:
          type: string
        internalmessage:
          type: string
        details:
          type: string
        recommendation:
          type: string
        moreinfo:
          type: string
          format: uri
    MultiStatus:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'uuid of the record'
        status:
          type: integer
          readOnly: true
          description: 'status -Http response code status (2XX, 3XX, 4XX, 5XX)'
        response:
          $ref: '#/components/schemas/SubjectMembership'
        error:
          $ref: '#/components/schemas/Error'
    SubjectMembership:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'Secondary primary key. Used in front end messages for security reasons.'
        organizationid:
          type: string
          description: 'Id of Organization'
        created:
          type: string
          readOnly: true
          description: 'Timestamp of creation #readOnly#'
        updated:
          type: string
          readOnly: true
          description: 'Timestamp of update #readOnly#'
        deleted:
          type: string
          readOnly: true
          description: 'Timestamp of deletion #readOnly#'
        isdeleted:
          type: boolean
          readOnly: true
          description: 'Is record logically deleted #readOnly#'
        crudsubjectid:
          type: string
          description: 'ID of Subject that reads, creates, updates or deletes'
        subjectid:
          type: string
          description: 'Id of Member User'
        subjectgroupid:
          type: string
          description: 'FK ID of Subject Group that Subject is member'
        subjectdirectoryid:
          type: string
          description: 'FK ID of Subject Directory'
          nullable: true
  requestBodies:
    SubjectMembership:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectMembership'
      description: 'SubjectMembership object that needs to be added or updated'
      required: true
    ListOfSubjectMembership:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectMembership'
      description: 'SubjectMembership array that needs to be added'
      required: true
    ListOfSubjectMembershipObject:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      description:  'list of SubjectMembership objects that needs to be updated, each additional property name should be the uuid of coresponding SubjectMembership record'
      required: true
  responses:
    '200':
      description: 'Successful operation'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectMembership'
    '200-ListOfSubjectMembership':
      description: 'A SubjectMembership array'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectMembership'
    '201':
      description: 'New SubjectMembership resource has been created'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectMembership'
    '204':
      description: 'The SubjectMembership resource was successfully deleted'
    '207':
      description: 'Multi Status for bulk operation'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MultiStatus'
    '304':
      description: 'Not Modified – The client can use cached data'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectMembership'
    '400':
      description: 'Invalid UUID supplied'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: 'Authorization information is missing or invalid'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: 'Not found – There is no resource behind the URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: 'Method not allowed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      description: 'Unprocessable Entity – server cannot process the request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '429':
      description: 'Too many request(rate limiting)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: 'Internal server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    default:
      description: 'error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: 'The number of items to skip before starting to collect the result set'
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: 'The numbers of items to return'
  securitySchemes:
    abyssCookieAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssCookieAuth'
    abyssHttpBasicAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssHttpBasicAuth'
    abyssApiKeyAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssApiKeyAuth'
    abyssJWTBearerAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssJWTBearerAuth'
    abyssAppAccessTokenAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssAppKeyAuth'
    abyssAppAccessTokenCookieAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssAppKeyCookieAuth'
  links: {}
  callbacks: {}
security:
  - abyssCookieAuth: []
  - abyssHttpBasicAuth: []
  - abyssApiKeyAuth: []
  - abyssJWTBearerAuth: []
  - abyssAppAccessTokenAuth: []
  - abyssAppAccessTokenCookieAuth: []
