openapi: 3.0.0
servers:
  - url: 'http://192.168.21.99:38081/abyss'
  - url: 'http://192.168.10.46:38081/abyss' 
  - url: 'https://apiportal.com/abyss'
info:
  description: Abyss platform APIs
  version: 1.0.0
  title: Abyss
  termsOfService: 'https://apiportal.com/terms/'
  contact:
    email: info@apiportal.com
    name: Abyss
    url: 'https://apiportal.com'
  license:
    name: Abyss 1.0
    url: 'https://apiportal.com/licenses/LICENSE-1.0.html'
tags:
  - name: TODO
    externalDocs:
      url: 'https://apiportal.com'
      description: Find out more
    description: Abyss ... [TODO]  
paths:
  /subject-activations:
    get:
      tags:
        - TODO
      summary: Get list of subjectActivations
      description: 'Returns list of subjectActivations'
      operationId: getSubjectActivations
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectActivation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      security: []
    post:
      tags:
        - TODO
      summary: Add a new SubjectActivation
      description: 'Provide a new SubjectActivation to be inserted'
      operationId: addSubjectActivations
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      security: []
      requestBody:
        $ref: '#/components/requestBodies/SubjectActivation'
    put:
      tags:
        - TODO
      summary: Update a bulk of SubjectActivation
      description: 'Provide an altered SubjectActivation array to be updated'
      operationId: updateSubjectActivations
      parameters:
        - name: uuid
          in: path
          description: bulk of uuids of subjectActivations that need to be updated
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid          
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectActivation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      security: []
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectActivation'          
    delete:
      tags:
        - TODO
      summary: Delete all subjectActivations
      description: 'Deletes all subjectActivations'
      operationId: deleteSubjectActivations
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      security: []
  /subject-activations/{uuid}:
    get:
      tags:
        - TODO
      summary: Get an existing SubjectActivation by uuid
      description: 'Provide an uuid of SubjectActivation to be get'
      operationId: getSubjectActivation
      parameters:
        - name: uuid
          in: path
          description: uuid of SubjectActivation that need to be get
          required: true
          schema:
            type: string
            format: uuid          
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      security: []
    put:
      tags:
        - TODO
      summary: Update an existing SubjectActivation
      description: 'Provide an altered SubjectActivation to be updated'
      operationId: updateSubjectActivation
      parameters:
        - name: uuid
          in: path
          description: uuid of SubjectActivation that need to be updated
          required: true
          schema:
            type: string
            format: uuid          
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      security: []
      requestBody:
        $ref: '#/components/requestBodies/SubjectActivation'
    delete:
      tags:
        - TODO
      summary: Delete SubjectActivation
      description: 'Provide an uuid parameter of SubjectActivation to be updated'
      operationId: deleteSubjectActivation
      parameters:
        - name: uuid
          in: path
          description: The uuid of SubjectActivation that needs to be deleted
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      security: []
externalDocs:
  description: See Abyss example
  url: 'https://apiportal.com/apidocs/index.html'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - usermessage
      properties:
        code:
          type: integer
          format: int32
        usermessage:
          type: string
        internalmessage:
          type: string
        details:
          type: string
        recommendation:
          type: string
        moreinfo:
          type: string
          format: uri
    SubjectActivation:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: Secondary primary key. Used in front end messages for security reasons.
        organizationId:
          type: integer
          format: int32
          description: Id of Organization
        created:
          type: string
          readOnly: true
          description: Timestamp of creation #readOnly#
        updated:
          type: string
          readOnly: true
          description: Timestamp of update #readOnly#
        deleted:
          type: string
          readOnly: true
          description: Timestamp of deletion #readOnly#
        isDeleted:
          type: boolean
          readOnly: true
          description: Is record logically deleted #readOnly#
        crudSubjectId:
          type: integer
          format: int32
          description: ID of Subject that creates, updates or deletes
        subjectId:
          type: integer
          format: int32
          description: The user that the activation code is generated
        expireDate:
          type: string
          description: Expire date of activation code
        token:
          type: string
          description: Activation token
        tokenType:
          type: string
          description: Type of token: Activation (token.type.activation), Reset Password (token.type.reset.password)
        email:
          type: string
          description: The email address that token is sent to
        nonce:
          type: string
          description: The number used only once in the token generation process
        userData:
          type: string
          description: User Data used in token generation process
  requestBodies:
    SubjectActivation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectActivation'          
      description: SubjectActivation object that needs to be added
      required: true
    ListOfSubjectActivation:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectActivation'          
      description: SubjectActivation array that needs to be added
      required: true
  responses:
    '200':
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectActivation'
    '200-ListOfSubjectActivation':
      description: A SubjectActivation array
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectActivation'          
            
    '201':
      description: New SubjectActivation resource has been created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectActivation'
    '204':
      description: The SubjectActivation resource was successfully deleted
    '304':
      description: Not Modified – The client can use cached data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectActivation'
    '400':
      description: Invalid UUID supplied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Authorization information is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden – The server understood the request, but is refusing it or the access is not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not found – There is no resource behind the URI
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      description: Unprocessable Entity – server cannot process the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '429':
      description: Too many request(rate limiting)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    default:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: abyss.session
      in: cookie
  links: {}
  callbacks: {}
security:
  - cookieAuth: []
