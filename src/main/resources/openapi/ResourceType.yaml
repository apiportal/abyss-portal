openapi: 3.0.0
servers:
  - url: 'http://192.168.21.99:38083/abyss/oapi'
  - url: 'http://192.168.21.139:38083/abyss/oapi'
  - url: 'http://192.168.10.46:38083/abyss/oapi' 
  - url: '/abyss/oapi'
info:
  description: Abyss platform APIs
  version: 1.0.0
  title: Abyss
  termsOfService: 'https://apiportal.com/terms/'
  contact:
    email: info@apiportal.com
    name: Abyss
    url: 'https://apiportal.com'
  license:
    name: Abyss 1.0
    url: 'https://apiportal.com/licenses/LICENSE-1.0.html'
tags:
  - name: TODO
    externalDocs:
      url: 'https://apiportal.com'
      description: Find out more
    description: Abyss ... [TODO]  
paths:
  /resource-types:
    get:
      tags:
        - TODO
      summary: Get list of ResourceTypes
      description: 'Returns list of ResourceTypes'
      operationId: getResourceTypes
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: search Subjects which names exact match
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: search Subjects which names begin with
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfResourceType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - TODO
      summary: Add a bulk of ResourceTypes
      description: 'Provide a list of ResourceType objects to be inserted'
      operationId: addResourceTypes
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfResourceType'
    put:
      tags:
        - TODO
      summary: Update a bulk of ResourceTypes
      description: 'Provide a bulk list of  ResourceType objects to be updated'
      operationId: updateResourceTypes
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfResourceTypeObject'
    delete:
      tags:
        - TODO
      summary: Delete all ResourceTypes
      description: 'Deletes all ResourceTypes'
      operationId: deleteResourceTypes
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /resource-types/{uuid}:
    get:
      tags:
        - TODO
      summary: Get an existing ResourceType by uuid
      description: 'Provide an uuid of ResourceType to be get'
      operationId: getResourceType
      parameters:
        - name: uuid
          in: path
          description: uuid of ResourceType that need to be get
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - TODO
      summary: Update an existing ResourceType
      description: 'Provide an altered ResourceType to be updated'
      operationId: updateResourceType
      parameters:
        - name: uuid
          in: path
          description: uuid of ResourceType that need to be updated
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ResourceType'
    delete:
      tags:
        - TODO
      summary: Delete ResourceType
      description: 'Provide an uuid parameter of ResourceType to be updated'
      operationId: deleteResourceType
      parameters:
        - name: uuid
          in: path
          description: The uuid of ResourceType that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
externalDocs:
  description: See Abyss example
  url: 'https://apiportal.com/apidocs/index.html'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - usermessage
      properties:
        code:
          type: integer
          format: int32
        usermessage:
          type: string
        internalmessage:
          type: string
        details:
          type: string
        recommendation:
          type: string
        moreinfo:
          type: string
          format: uri
    MultiStatus:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          readOnly: true
        response:
          $ref: '#/components/schemas/ResourceType'
        error:
          $ref: '#/components/schemas/Error'
    ResourceType:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: Secondary primary key. Used in front end messages for security reasons.
        organizationid:
          type: integer
          format: int32
          description: Id of Organization
        created:
          type: string
          description: Timestamp of creation
        updated:
          type: string
          description: Timestamp of update
        deleted:
          type: string
          description: Timestamp of deletion
        isdeleted:
          type: boolean
          description: Is record logically deleted
        crudsubjectid:
          type: integer
          format: int32
          description: ID of Subject that reads, creates, updates or deletes
        type:
          type: string
          description: Resource Type
  requestBodies:
    ResourceType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceType'          
      description: ResourceType object that needs to be added or updated
      required: true
    ListOfResourceType:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceType'          
      description: ResourceType array that needs to be added
      required: true
    ListOfResourceTypeObject:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      description:  list of ResourceType objects that needs to be updated, each additional property name should be the uuid of coresponding ResourceType record
      required: true
  responses:
    '200':
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceType'
    '200-ListOfResourceType':
      description: A ResourceType array
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceType'
    '201':
      description: New ResourceType resource has been created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceType'
    '204':
      description: The ResourceType resource was successfully deleted
    '207':
      description: Multi Status for bulk operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MultiStatus'
    '304':
      description: Not Modified – The client can use cached data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceType'
    '400':
      description: Invalid UUID supplied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Authorization information is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden – The server understood the request, but is refusing it or the access is not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not found – There is no resource behind the URI
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      description: Unprocessable Entity – server cannot process the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '429':
      description: Too many request(rate limiting)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    default:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return
  securitySchemes:
    abyssCookieAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssCookieAuth'
    abyssHttpBasicAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssHttpBasicAuth'
    abyssApiKeyAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssApiKeyAuth'
    abyssJWTBearerAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssJWTBearerAuth'
  links: {}
  callbacks: {}
security:
  - abyssCookieAuth: []
  - abyssHttpBasicAuth: []
  - abyssApiKeyAuth: []
  - abyssJWTBearerAuth: []
