#  /apis/subjects/{uuid}:
get:
  tags:
    - TODO
  summary: Get APIs by Subject uuid
  description: 'Provide an uuid of Subject to get his APIs'
  operationId: getApisOfSubject
  parameters:
    - name: uuid
      in: path
      description: uuid of Subject that need to get his APIs
      required: true
      schema:
        type: string
    - name: byname
      in: query
      required: false
      schema:
        type: string
      description: search APIs which names exact match
    - name: likename
      in: query
      required: false
      schema:
        type: string
      description: search APIs which names begin with
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
  responses:
    '200':
      $ref: '#/components/responses/200-ListOfApi'
    '400':
      $ref: '#/components/responses/400'
    '401':
      $ref: '#/components/responses/401'
    '403':
      $ref: '#/components/responses/403'
    '404':
      $ref: '#/components/responses/404'
    '422':
      $ref: '#/components/responses/422'
    '429':
      $ref: '#/components/responses/429'
    '500':
      $ref: '#/components/responses/500'
    default:
      $ref: '#/components/responses/default'
post:
  tags:
    - TODO
  summary: Add a bulk of new APIs for a Subject
  description: 'Provide a list of Api objects to be inserted'
  operationId: addApisOfSubject
  parameters:
    - name: uuid
      in: path
      description: uuid of Subject that need to add his APIs
      required: true
      schema:
        type: string
  responses:
    '207':
      $ref: '#/components/responses/207'
    '400':
      $ref: '#/components/responses/400'
    '401':
      $ref: '#/components/responses/401'
    '403':
      $ref: '#/components/responses/403'
    '404':
      $ref: '#/components/responses/404'
    '422':
      $ref: '#/components/responses/422'
    '429':
      $ref: '#/components/responses/429'
    '500':
      $ref: '#/components/responses/500'
    default:
      $ref: '#/components/responses/default'
  requestBody:
    $ref: '#/components/requestBodies/ListOfApi'
put:
  tags:
    - TODO
  summary: Update APIs of Subject
  description: 'Provide a list of Api objects to be updated'
  operationId: updateApisOfSubject
  parameters:
    - name: uuid
      in: path
      description: uuid of Subject that need to update his APIs
      required: true
      schema:
        type: string
  responses:
    '207':
      $ref: '#/components/responses/207'
    '400':
      $ref: '#/components/responses/400'
    '401':
      $ref: '#/components/responses/401'
    '403':
      $ref: '#/components/responses/403'
    '404':
      $ref: '#/components/responses/404'
    '422':
      $ref: '#/components/responses/422'
    '429':
      $ref: '#/components/responses/429'
    '500':
      $ref: '#/components/responses/500'
    default:
      $ref: '#/components/responses/default'
  requestBody:
    $ref: '#/components/requestBodies/ListOfApiObject'
delete:
  tags:
    - TODO
  summary: Delete all APIs of Subject
  description: 'Provide an uuid parameter of Api to be deleted'
  operationId: deleteApisOfSubject
  parameters:
    - name: uuid
      in: path
      description: uuid of Subject that need to delete his APIs
      required: true
      schema:
        type: string
  responses:
    '204':
      $ref: '#/components/responses/204'
    '401':
      $ref: '#/components/responses/401'
    '403':
      $ref: '#/components/responses/403'
    '404':
      $ref: '#/components/responses/404'
    '429':
      $ref: '#/components/responses/429'
    '500':
      $ref: '#/components/responses/500'
    default:
      $ref: '#/components/responses/default'
