openapi: 3.0.0
servers:
  - url: 'http://192.168.21.99:38083/abyss/oapi'
  - url: 'http://192.168.21.139:38083/abyss/oapi'
  - url: 'http://192.168.10.46:38083/abyss/oapi'
  - url: '/abyss/oapi'
info:
  description: 'Abyss platform APIs'
  version: '1.0.0'
  title: 'Abyss'
  termsOfService: 'https://apiportal.com/terms/'
  contact:
    email: 'info@apiportal.com'
    name: 'Abyss'
    url: 'https://apiportal.com'
  license:
    name: 'Abyss 1.0'
    url: 'https://apiportal.com/licenses/LICENSE-1.0.html'
tags:
  - name: SubjectPermissions
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : SubjectPermissions crud operations'
  - name: SubjectPermission
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : SubjectPermission crud operations'
  - name: Api Subscriptions
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : API Subcriptions crud operations'
  - name: Subscriptions to My APIs
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Listing operation of Subcriptions to my APIs'
  - name: Subscriptions of Subject
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Listing operation of Subcriptions of Subject'
paths:
  /subject-permissions:
    get:
      tags:
        - SubjectPermissions
      summary: 'Get list of SubjectPermissions'
      description: 'Returns list of SubjectPermissions'
      operationId: getSubjectPermissions
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectPermissions which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search SubjectPermissions which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectPermission'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - SubjectPermissions
      summary: 'Add a bulk of SubjectPermissions'
      description: 'Provide a list of SubjectPermissions to be inserted'
      operationId: addSubjectPermissions
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectPermission'
    put:
      tags:
        - SubjectPermissions
      summary: 'Update a bulk of SubjectPermissions'
      description: 'Provide a bulk list of  SubjectPermissions to be updated'
      operationId: updateSubjectPermissions
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectPermissionObject'
    delete:
      tags:
        - SubjectPermissions
      summary: 'Delete all SubjectPermissions'
      description: 'Deletes all SubjectPermissions'
      operationId: deleteSubjectPermissions
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-permissions/{uuid}:
    get:
      tags:
        - SubjectPermission
      summary: 'Get an existing SubjectPermission by uuid'
      description: 'Provide an uuid of SubjectPermission to be get'
      operationId: getSubjectPermission
      parameters:
        - name: uuid
          in: path
          description: 'uuid of SubjectPermission that need to be get'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - SubjectPermission
      summary: 'Update an existing SubjectPermission'
      description: 'Provide an altered SubjectPermission to be updated'
      operationId: updateSubjectPermission
      parameters:
        - name: uuid
          in: path
          description: 'uuid of SubjectPermission that need to be updated'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/SubjectPermission'
    delete:
      tags:
        - SubjectPermission
      summary: 'Delete SubjectPermission'
      description: 'Provide an uuid parameter of SubjectPermission to be updated'
      operationId: deleteSubjectPermission
      parameters:
        - name: uuid
          in: path
          description: 'The uuid of SubjectPermission that needs to be deleted'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-permissions/api-subscriptions/subject/{uuid}:
    parameters:
      - name: uuid
        in: path
        description: 'The uuid of Subject'
        required: true
        schema:
          type: string
    get:
      tags:
        - Api Subscriptions
      summary: 'Get list of Subject''s API subscriptions'
      description: 'Returns list of API subscriptions of subject'
      operationId: getApiSubscriptionsOfSubject
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search  API subscriptions which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search  API subscriptions which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectPermission'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - Api Subscriptions
      summary: 'Add a bulk of Subject''s API subscriptions'
      description: 'Provide a list of API subscriptions of subject to be inserted'
      operationId: addApiSubscriptionsOfSubject
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectPermission'
    put:
      tags:
        - Api Subscriptions
      summary: 'Update a bulk of Subject''s API subscriptions'
      description: 'Provide a bulk list of  API subscriptions of subject to be updated'
      operationId: updateApiSubscriptionsOfSubject
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfSubjectPermissionObject'
    delete:
      tags:
        - Api Subscriptions
      summary: 'Delete all API subscriptions of subject'
      description: 'Deletes all API subscriptions of subject'
      operationId: deleteApiSubscriptionsOfSubject
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-permissions/my-apis-subscriptions/subject/{uuid}:
    parameters:
      - name: uuid
        in: path
        description: 'The uuid of Subject'
        required: true
        schema:
          type: string
    get:
      tags:
        - Subscriptions to My APIs
      summary: 'Get list of API subscriptions to my APIs'
      description: 'Returns list of API subscriptions to my APIs'
      operationId: getApiSubscriptionsToMyApis
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search  API subscriptions which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search  API subscriptions which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectPermission'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /subject-permissions/subject/{uuid}:
    parameters:
      - name: uuid
        in: path
        description: 'The uuid of Subject'
        required: true
        schema:
          type: string
    get:
      tags:
        - Subscriptions of Subject
      summary: 'Get list of subscriptions of subject'
      description: 'Returns list of subscriptions of subject'
      operationId: getPermissionsOfSubject
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search subscriptions which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search subscriptions which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfSubjectPermission'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
externalDocs:
  description: 'See Abyss example'
  url: 'https://apiportal.com/apidocs/index.html'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - usermessage
      properties:
        code:
          type: integer
          format: int32
        usermessage:
          type: string
        internalmessage:
          type: string
        details:
          type: string
        recommendation:
          type: string
        moreinfo:
          type: string
          format: uri
    MultiStatus:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'uuid of the record'
        status:
          type: integer
          readOnly: true
          description: 'status -Http response code status (2XX, 3XX, 4XX, 5XX)'
        response:
          $ref: '#/components/schemas/SubjectPermission'
        error:
          $ref: '#/components/schemas/Error'
    SubjectPermission:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'Secondary primary key. Used in front end messages for security reasons.'
        organizationid:
          type: string
          description: 'Id of Organization'
        created:
          type: string
          readOnly: true
          description: 'Timestamp of creation #readOnly#'
        updated:
          type: string
          readOnly: true
          description: 'Timestamp of update #readOnly#'
        deleted:
          type: string
          readOnly: true
          description: 'Timestamp of deletion #readOnly#'
        isdeleted:
          type: boolean
          readOnly: true
          description: 'Is record logically deleted #readOnly#'
        crudsubjectid:
          type: string
          description: 'ID of Subject that reads, creates, updates or deletes'
        permission:
          type: string
          description: 'Permission of user'
        description:
          type: string
          description: 'Description of permission record'
        effectivestartdate:
          type: string
          description: 'Effective start date time of permission that it is active'
        effectiveenddate:
          type: string
          description: 'Effective end date time of permission that is active until'
        subjectid:
          type: string
          description: 'FK ID of Subject having the permission'
        resourceid:
          type: string
          description: 'FK ID of Resource'
        resourceactionid:
          type: string
          description: 'FK ID of Resource Action'
        accessmanagerid:
          type: string
          description: 'FK ID of Access Manager'
        isactive:
          type: boolean
          description: 'Is Subject Permission Active'
  requestBodies:
    SubjectPermission:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectPermission'
      description: 'SubjectPermission object that needs to be added or updated'
      required: true
    ListOfSubjectPermission:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectPermission'
      description: 'SubjectPermission array that needs to be added'
      required: true
    ListOfSubjectPermissionObject:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      description:  'list of SubjectPermission objects that needs to be updated, each additional property name should be the uuid of coresponding SubjectPermission record'
      required: true
  responses:
    '200':
      description: 'Successful operation'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectPermission'
    '200-ListOfSubjectPermission':
      description: 'A SubjectPermission array'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectPermission'
    '201':
      description: 'New SubjectPermission resource has been created'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectPermission'
    '204':
      description: 'The SubjectPermission resource was successfully deleted'
    '207':
      description: 'Multi Status for bulk operation'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MultiStatus'
    '304':
      description: 'Not Modified – The client can use cached data'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubjectPermission'
    '400':
      description: 'Invalid UUID supplied'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: 'Authorization information is missing or invalid'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: 'Not found – There is no resource behind the URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: 'Method not allowed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      description: 'Unprocessable Entity – server cannot process the request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '429':
      description: 'Too many request(rate limiting)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: 'Internal server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    default:
      description: 'error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: 'The number of items to skip before starting to collect the result set'
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: 'The numbers of items to return'
  securitySchemes:
    abyssCookieAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssCookieAuth'
    abyssHttpBasicAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssHttpBasicAuth'
    abyssApiKeyAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssApiKeyAuth'
    abyssJWTBearerAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssJWTBearerAuth'
    abyssAppAccessTokenAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssAppKeyAuth'
    abyssAppAccessTokenCookieAuth:
      $ref: '/openapi/AbyssSecuritySchemes.yaml#/securitySchemes/abyssAppKeyCookieAuth'
  links: {}
  callbacks: {}
security:
  - abyssCookieAuth: []
  - abyssHttpBasicAuth: []
  - abyssApiKeyAuth: []
  - abyssJWTBearerAuth: []
  - abyssAppAccessTokenAuth: []
  - abyssAppAccessTokenCookieAuth: []