openapi: 3.0.0
servers:
  - url: 'http://192.168.21.99:38083/abyss/oapi'
  - url: 'http://192.168.21.139:38083/abyss/oapi'
  - url: 'http://192.168.10.46:38083/abyss/oapi'
  - url: '/abyss/oapi'
info:
  description: 'Abyss platform APIs'
  version: '1.0.0'
  title: 'Abyss'
  termsOfService: 'https://apiportal.com/terms/'
  contact:
    email: 'info@apiportal.com'
    name: 'Abyss'
    url: 'https://apiportal.com'
  license:
    name: 'Abyss 1.0'
    url: 'https://apiportal.com/licenses/LICENSE-1.0.html'
tags:
  - name: ResourceActions
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : ResourceActions crud operations'
  - name: ResourceAction
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : ResourceAction crud operations'
  - name: Resource Type Actions
    externalDocs:
      url: 'https://apiportal.com'
      description: 'Find out more'
    description: 'Abyss plaftorm APIs : Resource Type Actions listing operations'
paths:
  /resource-actions:
    get:
      tags:
        - ResourceActions
      summary: 'Get list of ResourceActions'
      description: 'Returns list of ResourceActions'
      operationId: getResourceActions
      parameters:
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search ResourceActions which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search ResourceActions which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfResourceAction'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    post:
      tags:
        - ResourceActions
      summary: 'Add a bulk of ResourceActions'
      description: 'Provide a list of ResourceActions to be inserted'
      operationId: addResourceActions
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfResourceAction'
    put:
      tags:
        - ResourceActions
      summary: 'Update a bulk of ResourceActions'
      description: 'Provide a bulk list of  ResourceActions to be updated'
      operationId: updateResourceActions
      responses:
        '207':
          $ref: '#/components/responses/207'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ListOfResourceActionObject'
    delete:
      tags:
        - ResourceActions
      summary: 'Delete all ResourceActions'
      description: 'Deletes all ResourceActions'
      operationId: deleteResourceActions
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /resource-actions/{uuid}:
    get:
      tags:
        - ResourceAction
      summary: 'Get an existing ResourceAction by uuid'
      description: 'Provide an uuid of ResourceAction to be get'
      operationId: getResourceAction
      parameters:
        - name: uuid
          in: path
          description: 'uuid of ResourceAction that need to be get'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
    put:
      tags:
        - ResourceAction
      summary: 'Update an existing ResourceAction'
      description: 'Provide an altered ResourceAction to be updated'
      operationId: updateResourceAction
      parameters:
        - name: uuid
          in: path
          description: 'uuid of ResourceAction that need to be updated'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        $ref: '#/components/requestBodies/ResourceAction'
    delete:
      tags:
        - ResourceAction
      summary: 'Delete ResourceAction'
      description: 'Provide an uuid parameter of ResourceAction to be updated'
      operationId: deleteResourceAction
      parameters:
        - name: uuid
          in: path
          description: 'The uuid of ResourceAction that needs to be deleted'
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
  /resource-actions/type/{uuid}:
    get:
      tags:
        - Resource Type Actions
      summary: 'Get resource action list of resource type'
      description: 'Returns resource action list of resource type'
      operationId: getResourceActionsOfResourceType
      parameters:
        - name: uuid
          in: path
          description: 'The uuid of Resource Type'
          required: true
          schema:
            type: string
        - name: byname
          in: query
          required: false
          schema:
            type: string
          description: 'search ResourceActions which names exact match'
        - name: likename
          in: query
          required: false
          schema:
            type: string
          description: 'search ResourceActions which names begin with'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/200-ListOfResourceAction'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'
externalDocs:
  description: 'See Abyss example'
  url: 'https://apiportal.com/apidocs/index.html'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - usermessage
      properties:
        code:
          type: integer
          format: int32
        usermessage:
          type: string
        internalmessage:
          type: string
        details:
          type: string
        recommendation:
          type: string
        moreinfo:
          type: string
          format: uri
    MultiStatus:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'uuid of the record'
        status:
          type: integer
          readOnly: true
          description: 'status -Http response code status (2XX, 3XX, 4XX, 5XX)'
        response:
          $ref: '#/components/schemas/ResourceAction'
        error:
          $ref: '#/components/schemas/Error'
    ResourceAction:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
          description: 'Secondary primary key. Used in front end messages for security reasons.'
        organizationid:
          type: string
          description: 'Id of Organization'
        created:
          type: string
          description: 'Timestamp of creation'
        updated:
          type: string
          description: 'Timestamp of update'
        deleted:
          type: string
          description: 'Timestamp of deletion'
        isdeleted:
          type: boolean
          description: 'Is record logically deleted'
        crudsubjectid:
          type: string
          description: 'ID of Subject that reads, creates, updates or deletes'
        actionname:
          type: string
          description: 'Action Name'
        description:
          type: string
          description: 'Description of Action'
        resourcetypeid:
          type: string
          description: 'FK ID of Resource Type'
        isactive:
          type: boolean
          description: 'Is Resource Action Active'
  requestBodies:
    ResourceAction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceAction'
      description: 'ResourceAction object that needs to be added or updated'
      required: true
    ListOfResourceAction:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceAction'
      description: 'ResourceAction array that needs to be added'
      required: true
    ListOfResourceActionObject:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
      description:  'list of ResourceAction objects that needs to be updated, each additional property name should be the uuid of coresponding ResourceAction record'
      required: true
  responses:
    '200':
      description: 'Successful operation'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceAction'
    '200-ListOfResourceAction':
      description: 'A ResourceAction array'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceAction'
    '201':
      description: 'New ResourceAction resource has been created'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceAction'
    '204':
      description: 'The ResourceAction resource was successfully deleted'
    '207':
      description: 'Multi Status for bulk operation'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MultiStatus'
    '304':
      description: 'Not Modified – The client can use cached data'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceAction'
    '400':
      description: 'Invalid UUID supplied'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: 'Authorization information is missing or invalid'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: 'Forbidden – The server understood the request, but is refusing it or the access is not allowed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: 'Not found – There is no resource behind the URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: 'Method not allowed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      description: 'Unprocessable Entity – server cannot process the request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '429':
      description: 'Too many request(rate limiting)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: 'Internal server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    default:
      description: 'error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: 'The number of items to skip before starting to collect the result set'
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: 'The numbers of items to return'
  securitySchemes:
    abyssCookieAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssCookieAuth'
    abyssHttpBasicAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssHttpBasicAuth'
    abyssApiKeyAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssApiKeyAuth'
    abyssJWTBearerAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssJWTBearerAuth'
    abyssAppKeyAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssAppKeyAuth'
    abyssAppKeyCookieAuth:
      $ref: 'AbyssSecuritySchemes.yaml#/securitySchemes/abyssAppKeyCookieAuth'
  links: {}
  callbacks: {}
security:
  - abyssCookieAuth: []
  - abyssHttpBasicAuth: []
  - abyssApiKeyAuth: []
  - abyssJWTBearerAuth: []
  - abyssAppKeyAuth: []
  - abyssAppKeyCookieAuth: []
